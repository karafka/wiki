#!/usr/bin/env ruby

# Script that downloads librdkafka configuration documentation

require 'fileutils'
require 'open-uri'

# URL for librdkafka configuration documentation
LIBRDKAFKA_CONFIG = 'https://raw.githubusercontent.com/confluentinc/librdkafka/master/CONFIGURATION.md'

# Default output directory - can be overridden via command line
DEFAULT_OUTPUT_DIR = '.'

class LibrdkafkaConfigFetcher
  def initialize(output_dir = DEFAULT_OUTPUT_DIR)
    @output_dir = output_dir
    ensure_output_directory
  end

  def fetch_configuration
    puts "Fetching librdkafka configuration to #{@output_dir}..."

    fetch_configuration_doc

    puts "Done! Fetched librdkafka configuration documentation."
  end

  private

  def ensure_output_directory
    FileUtils.mkdir_p(@output_dir) unless Dir.exist?(@output_dir)
    FileUtils.mkdir_p(File.join(@output_dir, 'Librdkafka')) unless Dir.exist?(File.join(@output_dir, 'Librdkafka'))
  end

  def fetch_configuration_doc
    puts "Fetching librdkafka configuration..."

    begin
      # Fetch content and remove the first line (page title)
      config_content = URI.open(LIBRDKAFKA_CONFIG).read.split("\n")[1..].join("\n")

      output_file = File.join(@output_dir, 'Librdkafka', 'Configuration.md')
      write_complete_configuration_file(config_content, output_file)

      puts "  ✓ Saved to #{output_file}"
    rescue => e
      puts "  ✗ Failed to fetch librdkafka configuration: #{e.message}"
    end
  end

  def write_complete_configuration_file(config_content, filename)
    File.open(filename, 'w') do |file|
      file.write <<~HEADER
[//]: # (This file is auto-generated by bin/refresh_librdkafka_config)
[//]: # (Do not edit manually - changes will be overwritten)

<style>
  .md-grid {
    max-width: 100%;
  }
</style>
# Librdkafka Configuration Properties
!!! note ""
    This page is a copy of the [CONFIGURATION.md](https://github.com/confluentinc/librdkafka/blob/master/CONFIGURATION.md) of `librdkafka`.
The configuration values below fall under the `kafka` scope within WaterDrop and Karafka. Aside from these, both frameworks have multiple root configuration options that dictate their overall behavior. Ensure you differentiate between kafka-specific settings and the broader root configurations for effective setup and adjustments.
!!! warning "Notice on Configuration Defaults"
    Please be aware that the settings listed below are the default configurations for `librdkafka` and not for Karafka or WaterDrop. It's important to note that, in some cases, Karafka and WaterDrop employ different default values for their configurations. We strongly recommend consulting the documentation and the configuration code to understand the exact values used within the Karafka ecosystem.
***

#{config_content}
HEADER
    end
  end
end

# Script execution
if __FILE__ == $0
  output_dir = ARGV[0] || DEFAULT_OUTPUT_DIR

  fetcher = LibrdkafkaConfigFetcher.new(output_dir)
  fetcher.fetch_configuration
end
